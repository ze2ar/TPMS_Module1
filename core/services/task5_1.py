import math

# TODO Check all functions
# TODO Refactor formatters, right amount of \ or just delete it (outer func)


def poisson_formula(a: float, m: int) -> float:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ —Ñ–æ—Ä–º—É–ª–µ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ü—É–∞—Å—Å–æ–Ω–∞.

    üìù –§–æ—Ä–º—É–ª–∞: P(m) = (a^m / m!) * e^(-a)

    :param a: –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π –∑–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª (–º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ)
    :param m: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Å—Ç—É–ø–∏–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π
    :return: –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ—è–≤–ª–µ–Ω–∏—è m —Å–æ–±—ã—Ç–∏–π –ø—Ä–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ a

    –ü—Ä–∏–º–µ—Ä:
    a = 2.57
    m = 2

    –í—ã—á–∏—Å–ª–µ–Ω–∏–µ:
    P(2) = (2.57^2 / 2!) * e^(-2.57)
         ‚âà (6.6049 / 2) * e^(-2.57)
         ‚âà 3.30245 * 0.0767
         ‚âà 0.2532

    –û—Ç–≤–µ—Ç: 0.2532
    """
    return (a**m) / math.factorial(m) * math.exp(-a)


def local_moivre_laplace(sigma: float, x_m: float) -> float:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞.

    üìù –§–æ—Ä–º—É–ª–∞: P(m) ‚âà (1 / œÉ) * œÜ(x_m)

    –ì–¥–µ œÜ(x) = (1 / ‚àö(2œÄ)) * e^(-x¬≤ / 2)

    :param sigma: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (œÉ)
    :param x_m: –ù–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (x_m)
    :return: –ü—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞

    –ü—Ä–∏–º–µ—Ä:
    sigma = 2.57
    x_m = -3.48

    –í—ã—á–∏—Å–ª–µ–Ω–∏–µ:
    œÜ(3.48) = (1 / ‚àö(2œÄ)) * e^(-(3.48)¬≤ / 2)
            ‚âà (1 / 2.5066) * e^(-6.0552)
            ‚âà 0.3989 * 0.00234
            ‚âà 0.0009337

    P ‚âà (1 / 2.57) * 0.0009337
      ‚âà 0.0003633

    –û—Ç–≤–µ—Ç: 0.0003633
    """
    phi = (1 / math.sqrt(2 * math.pi)) * math.exp(-0.5 * x_m**2)
    return (1 / sigma) * phi


def integral_moivre_laplace(a: float, b: float) -> float:
    """
    –í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞.

    üìù –§–æ—Ä–º—É–ª–∞: P(a < x < b) ‚âà Œ¶(b) - Œ¶(a)

    –ì–¥–µ Œ¶(x) ‚Äî —Ñ—É–Ω–∫—Ü–∏—è –õ–∞–ø–ª–∞—Å–∞ (–∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è),
    –æ–±–ª–∞–¥–∞—é—â–∞—è —Å–≤–æ–π—Å—Ç–≤–æ–º —á—ë—Ç–Ω–æ—Å—Ç–∏:
    Œ¶(-x) = -Œ¶(x)

    –ü—Ä–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö –≥—Ä–∞–Ω–∏—Ü–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —ç—Ç–æ —Å–≤–æ–π—Å—Ç–≤–æ:
    - –ï—Å–ª–∏ –æ–±–µ –≥—Ä–∞–Ω–∏—Ü—ã –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ (a < 0 –∏ b < 0), —Ç–æ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å—á–∏—Ç–∞–µ—Ç—Å—è –∫–∞–∫ -Œ¶(b) + Œ¶(a)
    - –ï—Å–ª–∏ –æ–¥–Ω–∞ –≥—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–∞—è, –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ Œ¶(b) - Œ¶(a)

    :param a: –õ–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (a)
    :param b: –ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (b)
    :return: –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ —Å–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ –ø–æ–ø–∞–¥—ë—Ç –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª [a, b]

    –ü—Ä–∏–º–µ—Ä—ã:

    1Ô∏è‚É£ a = -3.48, b = 3.48

    –í—ã—á–∏—Å–ª–µ–Ω–∏–µ:
    Œ¶(3.48) ‚âà 0.99975
    Œ¶(-3.48) = -0.99975 (–ø–æ —Å–≤–æ–π—Å—Ç–≤—É —á—ë—Ç–Ω–æ—Å—Ç–∏)

    P ‚âà Œ¶(3.48) - Œ¶(-3.48)
      ‚âà 0.99975 - (-0.99975)
      ‚âà 1.9995

    –û—Ç–≤–µ—Ç: 1.9995 (–ø–æ–≥—Ä–µ—à–Ω–æ—Å—Ç—å –ø—Ä–∏–±–ª–∏–∂—ë–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞)

    2Ô∏è‚É£ a = -4, b = -3.9

    –í—ã—á–∏—Å–ª–µ–Ω–∏–µ:
    Œ¶(-4.0) = -Œ¶(4.0) ‚âà -0.99997
    Œ¶(-3.9) = -Œ¶(3.9) ‚âà -0.99995

    P ‚âà Œ¶(-3.9) - Œ¶(-4.0)
      ‚âà -0.99995 - (-0.99997)
      ‚âà 0.00002

    –û—Ç–≤–µ—Ç: 0.00002
    """

    def laplace(x):
        return 0.5 * (1 + math.erf(x / math.sqrt(2)))

    return laplace(b) - laplace(a)


def poisson_formatter(a: float, m: int) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ —Ç–µ–æ—Ä–µ–º–µ –ü—É–∞—Å—Å–æ–Ω–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª–∏–Ω–æ–π 20 —Å–∏–º–≤–æ–ª–æ–≤.

    üìù –§–æ—Ä–º–∞—Ç: <a>^<m>/<m>!e^-<a>\\\\

    –ü—Ä–∏–º–µ—Ä: 2,57^2/2!e^-2,57\\\\

    :param a: –°—Ä–µ–¥–Ω–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–±—ã—Ç–∏–π (a)
    :param m: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞—Å—Ç—É–ø–∏–≤—à–∏—Ö —Å–æ–±—ã—Ç–∏–π (m)
    :return: –°—Ç—Ä–æ–∫–∞ –¥–ª–∏–Ω–æ–π 20 —Å–∏–º–≤–æ–ª–æ–≤
    """
    a_str = f"{a:.2f}".replace(".", ",")
    m_str = str(m)

    result = f"{a_str}^{m_str}/{m_str}!e^-{a_str}"
    result = result.ljust(20, "\\")  # –î–æ–ø–æ–ª–Ω—è–µ–º –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤ —Å–∏–º–≤–æ–ª–æ–º '\'

    return result


def local_moivre_laplace_formatter(sigma: float, x_m: float) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª–∏–Ω–æ–π 20 —Å–∏–º–≤–æ–ª–æ–≤.

    üìù –§–æ—Ä–º–∞—Ç: 1/<œÉ>fi(<|x_m|>)\\\\

    –ü—Ä–∏–º–µ—Ä: 1/2,57fi(3,48)\\\\\\\\\

    :param sigma: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (œÉ)
    :param x_m: –ù–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è (x_m)
    :return: –°—Ç—Ä–æ–∫–∞ –¥–ª–∏–Ω–æ–π 20 —Å–∏–º–≤–æ–ª–æ–≤
    """
    sigma_str = f"{sigma:.2f}".replace(".", ",")
    x_m_abs_str = f"{abs(x_m):.2f}".replace(".", ",")

    result = f"1/{sigma_str}fi({x_m_abs_str})"
    result = result.ljust(20, "\\")

    return result


def integral_moivre_laplace_formatter(a: float, b: float) -> str:
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª–∏–Ω–æ–π 20 —Å–∏–º–≤–æ–ª–æ–≤.

    üìù –§–æ—Ä–º–∞—Ç: –§_0(<|a|>)¬±–§_0(<|b|>)\\\\

    –ï—Å–ª–∏ a –∏ b –æ–¥–Ω–æ–≥–æ –∑–Ω–∞–∫–∞:
    - –æ–±–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ: –§_0(a) - –§_0(b)
    - –æ–±–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ: -–§_0(|a|) + –§_0(|b|)

    –ü—Ä–∏–º–µ—Ä—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:
    –§_0(3,48)+–§_0(3,48)\\\\\\
    -–§_0(3,9)+–§_0(4)\\\\\\\\\

    :param a: –õ–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (a)
    :param b: –ü—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è (b)
    :return: –°—Ç—Ä–æ–∫–∞ –¥–ª–∏–Ω–æ–π 20 —Å–∏–º–≤–æ–ª–æ–≤
    """

    def format_number(x: float) -> str:
        num_str = f"{abs(x):.2f}".replace(".", ",")
        num_str = num_str.rstrip(",00").rstrip(",0")
        return num_str

    a_str = format_number(a)
    b_str = format_number(b)

    if a < 0 and b < 0:
        result = f"-–§_0({b_str})+–§_0({a_str})"
    else:
        result = f"–§_0({b_str})+–§_0({a_str})"

    result = result.ljust(20, "\\")

    return result
