from fastapi import APIRouter
import math

from core.models import (
    PoissonRequest,
    LocalMoivreLaplaceRequest,
    IntegralMoivreLaplaceRequest,
)
from core.services import (
    poisson_formatter,
    local_moivre_laplace_formatter,
    integral_moivre_laplace_formatter,
)

router = APIRouter(prefix="/task5_1", tags=["task5_1"])


@router.post(
    "/poisson-formula",
    response_model=str,
    summary="–¢–µ–æ—Ä–µ–º–∞ –ü—É–∞—Å—Å–æ–Ω–∞",
    description="""
    üìå **–û–ø–∏—Å–∞–Ω–∏–µ**:

    –í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ —Ç–µ–æ—Ä–µ–º–µ –ü—É–∞—Å—Å–æ–Ω–∞.
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –Ω–µ–±–æ–ª—å—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö

    üìù –§–æ—Ä–º—É–ª–∞: `P(m) ‚âà a^m / m! * e^(-a)`

    ‚ÑπÔ∏è –ì–¥–µ:
     - a - –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ (n*p)

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - n ‚Äî –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–π
    - p ‚Äî –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞ –≤ –æ–¥–Ω–æ–º –∏—Å–ø—ã—Ç–∞–Ω–∏–∏
    - m ‚Äî –ß–∏—Å–ª–æ –Ω–∞—Å—Ç—É–ø–ª–µ–Ω–∏–π —Å–æ–±—ã—Ç–∏—è

    
    üìö –ü—Ä–∏–º–µ—Ä—ã:
    1. –ï—Å–ª–∏ n = 900, p = 0.005, m = 3, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: `"2,57^3/3!e^-2,57"`
    """,
    response_description="–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ —Ñ–æ—Ä–º—É–ª–µ –ü—É–∞—Å—Å–æ–Ω–∞.",
)
def api_poisson_formula(request: PoissonRequest):
    return poisson_formatter(n=request.n, p=request.p, m=request.m)


@router.post(
    "/local-moivre-laplace",
    response_model=str,
    summary="–õ–æ–∫–∞–ª—å–Ω–∞—è —Ç–µ–æ—Ä–µ–º–∞ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞",
    description="""
    üìå **–û–ø–∏—Å–∞–Ω–∏–µ**:

    –í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞.
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

    üìù –§–æ—Ä–º—É–ª–∞: `P(m) ‚âà 1 / (œÉ‚àö(2œÄ)) * e^(-x_m¬≤/2)`

    ‚ÑπÔ∏è –ì–¥–µ:
    - œÉ ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (sqrt(n * p * (1 - p)))
    - x_m ‚Äî –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ ((x_target - n * p) / œÉ)
    - –§—É–Ω–∫—Ü–∏—è œÜ(-x) = œÜ(x)

    ‚ÑπÔ∏è –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - n ‚Äî –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–π
    - p ‚Äî –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞ –≤ –æ–¥–Ω–æ–º –∏—Å–ø—ã—Ç–∞–Ω–∏–∏
    - m ‚Äî –¶–µ–ª–µ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å–ø–µ—Ö–æ–≤
    
    üìö –ü—Ä–∏–º–µ—Ä—ã:
    1. –ï—Å–ª–∏ n = 170, p = 0.55, x_target = 90, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: `"1/6,49fi(0,54)""`
    """,
    response_description="–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞.",
)
def api_local_moivre_laplace(request: LocalMoivreLaplaceRequest):
    return local_moivre_laplace_formatter(
        n=request.n, p=request.p, x_target=request.x_target
    )


@router.post(
    "/integral-moivre-laplace",
    response_model=str,
    summary="–ò–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–∞—è —Ç–µ–æ—Ä–µ–º–∞ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞",
    description="""
    üìå **–û–ø–∏—Å–∞–Ω–∏–µ**:

    –í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ —Å–ª—É—á–∞–π–Ω–∞—è –≤–µ–ª–∏—á–∏–Ω–∞ –ø–æ–ø–∞–¥—ë—Ç –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª [x1, x2] –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞.

    üìù **–§–æ—Ä–º—É–ª–∞:**  
    `P(x1 < X < x2) ‚âà Œ¶(b) - Œ¶(a)`

    ‚ÑπÔ∏è **–ì–¥–µ:**  
    - `œÉ = sqrt(n * p * (1 - p))` ‚Äî —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ  
    - `a = (x1 - n * p) / œÉ` ‚Äî –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è `x1`  
    - `b = (x2 - n * p) / œÉ` ‚Äî –Ω–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è `x2`  
    - `Œ¶(x)` ‚Äî —Ñ—É–Ω–∫—Ü–∏—è –õ–∞–ø–ª–∞—Å–∞, –≥–¥–µ `Œ¶(-x) = -Œ¶(x)`
    
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - `n` ‚Äî –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å–ø—ã—Ç–∞–Ω–∏–π  
    - `p` ‚Äî –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —É—Å–ø–µ—Ö–∞ –≤ –æ–¥–Ω–æ–º –∏—Å–ø—ã—Ç–∞–Ω–∏–∏  
    - `x1` ‚Äî –ª–µ–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ —á–∏—Å–ª–∞ —É—Å–ø–µ—Ö–æ–≤  
    - `x2` ‚Äî –ø—Ä–∞–≤–∞—è –≥—Ä–∞–Ω–∏—Ü–∞ —á–∏—Å–ª–∞ —É—Å–ø–µ—Ö–æ–≤  

    üìö **–ü—Ä–∏–º–µ—Ä:**  
    1. –ï—Å–ª–∏ n = 400, p = 0.1, x1 = 30, x2 = 50, —Ä–µ–∑—É–ª—å—Ç–∞—Ç: `"–§_0(3,48)+–§_0(3,48)"`
    """,
    response_description="–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ –∏–Ω—Ç–µ–≥—Ä–∞–ª—å–Ω–æ–π —Ç–µ–æ—Ä–µ–º–µ –ú—É–∞–≤—Ä–∞-–õ–∞–ø–ª–∞—Å–∞.",
)
def api_integral_moivre_laplace(request: IntegralMoivreLaplaceRequest):
    return integral_moivre_laplace_formatter(
        n=request.n, p=request.p, x1=request.x1, x2=request.x2
    )
