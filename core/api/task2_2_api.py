from fastapi import APIRouter
import numpy as np

from core.models import MeetingProbabilityRequest, ProbabilityRequest
from core.services import meeting_probability, probability_of_condition

router = APIRouter(prefix="/task2_2", tags=["Task2_2"])


@router.post(
    "/meeting-probability",
    response_model=float,
    summary="–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∏",
    description="""
    –í—ã—á–∏—Å–ª—è–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –≤—Å—Ç—Ä–µ—á–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è,
    –µ—Å–ª–∏ –¥–≤–∞ —á–µ–ª–æ–≤–µ–∫–∞ –ø—Ä–∏—Ö–æ–¥—è—Ç —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    –∏ —Å–æ–≥–ª–∞—à–∞—é—Ç—Å—è –∂–¥–∞—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–µ –±–æ–ª–µ–µ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
    
    üìö –ü—Ä–∏–º–µ—Ä:–î–≤–æ–µ —É—Å–ª–æ–≤–∏–ª–∏—Å—å –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è –º–µ–∂–¥—É 13 –∏ 20 —á–∞—Å–∞–º–∏, –ø—Ä–∏—á–µ–º –¥–æ–≥–æ–≤–æ—Ä–∏–ª–∏—Å—å –∂–¥–∞—Ç—å
    –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –Ω–µ –±–æ–ª–µ–µ 22 –º–∏–Ω—É—Ç. –°—á–∏—Ç–∞—è, —á—Ç–æ –º–æ–º–µ–Ω—Ç –ø—Ä–∏—Ö–æ–¥–∞ –Ω–∞ –≤—Å—Ç—Ä–µ—á—É –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è
    –∫–∞–∂–¥—ã–º ¬´–Ω–∞—É–¥–∞—á—É¬ª –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –Ω–∞–π–¥–∏—Ç–µ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ
    –≤—Å—Ç—Ä–µ—á–∞ —Å–æ—Å—Ç–æ–∏—Ç—Å—è. (–û—Ç–≤–µ—Ç –æ–∫—Ä—É–≥–ª–∏—Ç–µ –¥–æ 3 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π)
    """,
    response_description="–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –≤—Å—Ç—Ä–µ—á–∏ (–æ—Ç 0 –¥–æ 1)",
)
def api_meeting_probability(request: MeetingProbabilityRequest):
    probability = meeting_probability(
        start_time=request.start_time,
        end_time=request.end_time,
        wait_time=request.wait_time,
    )

    return round(probability, 3)


@router.post(
    "/probability",
    response_model=float,
    summary="–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ —É—Å–ª–æ–≤–∏—è y ? f(x)",
    description="""
    –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ –¥–ª—è —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª x –∏ y,
    y ? f(x), –≥–¥–µ x ‚Äî —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –æ—Ç start –¥–æ end. 
    –£—Å–ª–æ–≤–∏–µ f(x) –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –∫–∞–∫ —Å—Ç—Ä–æ–∫–∞. ? - –∑–Ω–∞–∫.
    
    üìö –ü—Ä–∏–º–µ—Ä: –ó–∞–≥–∞–¥—ã–≤–∞—é—Ç—Å—è –¥–≤–∞ —á–∏—Å–ª–∞ x –∏ y –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–µ –æ—Ç 0 –¥–æ 9. –ö–∞–∫–æ–≤–∞ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, —á—Ç–æ y < \frac{7}{x}? 
    (–û—Ç–≤–µ—Ç –æ–∫—Ä—É–≥–ª–∏—Ç–µ –¥–æ 3 –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π)
    """,
    response_description="–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Ç–æ–≥–æ, —á—Ç–æ y < f(x) (–æ—Ç 0 –¥–æ 1).",
)
def api_probability(request: ProbabilityRequest):
    probability = probability_of_condition(
        start=request.start,
        end=request.end,
        condition_func=eval(f"lambda x: {request.condition}", {"x": 0, "np": np}),
        sign=request.sign,
    )

    return round(probability, 3)
