from fastapi import APIRouter

from core.models import *
from core.services import *

router = APIRouter(prefix="/task1", tags=["Task1"])


@router.post(
    "/count-words",
    response_model=int,
    summary="–ü–æ–¥—Å—á–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤",
    description="""
    –í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö \"—Å–ª–æ–≤\", –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å 
    –∏–∑ –Ω–µ–ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –±—É–∫–≤ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞, –∑–∞–¥–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã.
    
    üìö –ü—Ä–∏–º–µ—Ä: –°–∫–æ–ª—å–∫–æ ¬´—Å–ª–æ–≤¬ª –º–æ–∂–Ω–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –∏–∑ –±—É–∫–≤ —Å–ª–æ–≤–∞ –î–ò–°–ö–ï–¢–ê, –µ—Å–ª–∏ ¬´—Å–ª–æ–≤–∞¬ª –¥–æ–ª–∂–Ω—ã —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 5 –±—É–∫–≤?
    """,
    response_description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å–ª–æ–≤",
)
def api_count_words(request: WordRequest):
    return count_words(word=request.word, length=request.length)


@router.post(
    "/count-same-author-selection",
    response_model=int,
    summary="–í—ã–±–æ—Ä –∫–Ω–∏–≥ –æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞",
    description="""
    –í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±—Ä–∞—Ç—å –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ —É –æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–≤—Ç–æ—Ä–æ–≤.
    
    üìö –ü—Ä–∏–º–µ—Ä: –ò–º–µ–µ—Ç—Å—è 7 —Ä–∞–∑–Ω—ã—Ö –∫–Ω–∏–≥ –ü—É—à–∫–∏–Ω–∞, 9 ‚Äî –õ–µ—Ä–º–æ–Ω—Ç–æ–≤–∞, 8 ‚Äî –ß–µ—Ö–æ–≤–∞.  –ö–∞–∫–∏–º —á–∏—Å–ª–æ–º 
    —Å–ø–æ—Å–æ–±–æ–≤ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –¥–≤–µ –∫–Ω–∏–≥–∏ –æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞?
    """,
    response_description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±–æ—Ä–∞ –∫–Ω–∏–≥ –æ–¥–Ω–æ–≥–æ –∞–≤—Ç–æ—Ä–∞",
)
def api_count_same_author_selection(request: AuthorSelectionRequest):
    return count_same_author_selection(
        books_by_authors=request.books_by_authors, selected_books=request.selected_books
    )


@router.post(
    "/count-author-selection",
    response_model=int,
    summary="–í—ã–±–æ—Ä –∫–Ω–∏–≥ —É –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–≤—Ç–æ—Ä–æ–≤",
    description="""
    –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±—Ä–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥ —É –∫–∞–∂–¥–æ–≥–æ –∞–≤—Ç–æ—Ä–∞ –∏–∑ —Å–ø–∏—Å–∫–∞.
    
    üìö –ü—Ä–∏–º–µ—Ä: –ò–º–µ–µ—Ç—Å—è 6 —Ä–∞–∑–Ω—ã—Ö –∫–Ω–∏–≥ –ü—É—à–∫–∏–Ω–∞, 8 ‚Äî –õ–µ—Ä–º–æ–Ω—Ç–æ–≤–∞, 7 ‚Äî –ß–µ—Ö–æ–≤–∞. –ö–∞–∫–∏–º —á–∏—Å–ª–æ–º
    —Å–ø–æ—Å–æ–±–æ–≤ –º–æ–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å 1 –∫–Ω–∏–≥—É –ü—É—à–∫–∏–Ω–∞, –¥–≤–µ ‚Äî –õ–µ—Ä–º–æ–Ω—Ç–æ–≤–∞, —Ç—Ä–∏ ‚Äî –ß–µ—Ö–æ–≤–∞?
    """,
    response_description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±–æ—Ä–∞ –∫–Ω–∏–≥ —É –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∞–≤—Ç–æ—Ä–æ–≤",
)
def api_count_author_selection(request: AuthorMultipleSelectionRequest):
    return count_author_selection(
        authors_books=request.authors_books, selected_books=request.selected_books
    )


@router.post(
    "/seating-arrangements",
    response_model=int,
    summary="–†–∞—Å—Å–∞–¥–∫–∞ –≤ –º–∞—à–∏–Ω—É —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ –≤–æ–¥–∏—Ç–µ–ª—è",
    description="""
    –í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ —Ä–∞—Å—Å–∞–¥–∏—Ç—å –ª—é–¥–µ–π –≤ –º–∞—à–∏–Ω—É, —É—á–∏—Ç—ã–≤–∞—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ,
    —á—Ç–æ –≤–æ–¥–∏—Ç–µ–ª–µ–º –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π.
    
    üìö –ü—Ä–∏–º–µ—Ä: –í –∞–≤—Ç–æ–º–∞—à–∏–Ω–µ 5 –º–µ—Å—Ç, –≤–∫–ª—é—á–∞—è –º–µ—Å—Ç–æ –≤–æ–¥–∏—Ç–µ–ª—è. –°–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ 5 —á–µ–ª–æ–≤–µ–∫
    –º–æ–≥—É—Ç —É—Å–µ—Å—Ç—å—Å—è –≤ —ç—Ç—É –º–∞—à–∏–Ω—É, –µ—Å–ª–∏ –∑–∞–Ω—è—Ç—å –º–µ—Å—Ç–æ –≤–æ–¥–∏—Ç–µ–ª—è –º–æ–∂–µ—Ç —Ç–æ–ª—å–∫–æ 1 —á–µ–ª–æ–≤–µ–∫?
    """,
    response_description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ —Ä–∞—Å—Å–∞–¥–∫–∏ –ª—é–¥–µ–π –≤ –º–∞—à–∏–Ω—É",
)
def api_seating_arrangements(request: SeatingRequest):
    return seating_arrangements(
        total_people=request.total_people,
        seats=request.seats,
        eligible_drivers=request.eligible_drivers,
    )


@router.post(
    "/bouquet-combinations",
    response_model=int,
    summary="–ö–æ–º–±–∏–Ω–∞—Ü–∏–∏ –±—É–∫–µ—Ç–æ–≤ –∏–∑ —Ü–≤–µ—Ç–æ–≤",
    description="""
    –í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–∫–µ—Ç –∏–∑ —Ü–≤–µ—Ç–æ–≤ —Ä–∞–∑–Ω—ã—Ö —Å–æ—Ä—Ç–æ–≤, 
    —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤.
    
    üìö –ü—Ä–∏–º–µ—Ä: –°–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –º–æ–∂–Ω–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å –±—É–∫–µ—Ç –∏–∑ 11 —Ü–≤–µ—Ç–æ–≤, –µ—Å–ª–∏ –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å
    —Ü–≤–µ—Ç—ã 5 —Å–æ—Ä—Ç–æ–≤?     
    """,
    response_description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ —Å–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –±—É–∫–µ—Ç–∞",
)
def api_bouquet_combinations(request: BouquetRequest):
    return combinations_with_repetition(
        n=request.flower_types, k=request.flowers_in_bouquet
    )


@router.post(
    "/anagram",
    response_model=int,
    summary="–ü–æ–¥—Å—á–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫ –±—É–∫–≤",
    description="""
    –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–∫–æ–π –≤—Å–µ—Ö –±—É–∫–≤ –≤–æ –≤—Ö–æ–¥–Ω–æ–º —Å–ª–æ–≤–µ.
    –£—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –±—É–∫–≤—ã, –ø–æ—ç—Ç–æ–º—É –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–æ—Ä–º—É–ª–∞ –ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫ —Å –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è–º–∏.
    
    üìö –ü—Ä–∏–º–µ—Ä: –°–∫–æ–ª—å–∫–æ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö ¬´—Å–ª–æ–≤¬ª –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å, –ø–µ—Ä–µ—Å—Ç–∞–≤–ª—è—è –±—É–∫–≤—ã –≤ —Å–ª–æ–≤–µ –í–ï–†–û–Ø–¢–ù–û–°–¢–¨?
    """,
    response_description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–ª–æ–≤ (–ø–µ—Ä–µ—Å—Ç–∞–Ω–æ–≤–æ–∫)",
)
def api_count_anagrams(request: AnagramRequest):
    return count_anagrams(word=request.word)


@router.post(
    "/count-committee",
    response_model=int,
    summary="–ü–æ–¥—Å—á–µ—Ç —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±–æ—Ä–∞ –∫–æ–º–∏—Å—Å–∏–∏",
    description="""
    –í—ã—á–∏—Å–ª—è–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é –∏–∑ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —á–µ–ª–æ–≤–µ–∫.
    –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Å–æ—á–µ—Ç–∞–Ω–∏—è –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π –ø–æ —Ñ–æ—Ä–º—É–ª–µ C(n, k).
    
    üìö –ü—Ä–∏–º–µ—Ä: –°–∫–æ–ª—å–∫–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –∏–∑ 9 —á–µ–ª–æ–≤–µ–∫ –º–æ–∂–Ω–æ –∏–∑–±—Ä–∞—Ç—å –∫–æ–º–∏—Å—Å–∏—é, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ 3 —á–ª–µ–Ω–æ–≤?
    """,
    response_description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –≤—ã–±–æ—Ä–∞ –∫–æ–º–∏—Å—Å–∏–∏",
)
def api_count_committee(request: CommitteeRequest):
    return combinations(n=request.people_count, k=request.committee_size)
